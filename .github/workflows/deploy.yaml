name: Deployment

on:
  push:
    branches:
      - main
      - releases/release*
  pull_request:

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    container:
      image: node:20
    permissions:
      checks: write          # allow Firebase action to create check-runs
      contents: read         # read repo contents
      pull-requests: write   # comment on PR with preview URL

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm ci

      - name: Build App
        run: npm run build

      - name: Run Lint
        run: npm run lint

      # Deploy preview for PRs
      - name: Deploy Preview (PR)
        if: github.event_name == 'pull_request'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SETUPATI_SCHOOL_APP }}
          projectId: setupati-school-app
          channelId: pr-${{ github.event.pull_request.number }}

      # Deploy live for pushes to main/release
      - name: Deploy Live
        if: github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/releases/release'))
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SETUPATI_SCHOOL_APP }}
          projectId: setupati-school-app
          channelId: live

      - name: Check for changes in app folder
        id: changes
        run: |
          # Check if any files changed in 'app/' compared to previous commit
          echo "Checking changes in app/ folder..."
          # Fetch the previous commit SHA to compare to
          echo "CHANGED=$(git diff --name-only ${{ github.sha }} ${{ github.sha }}^ | grep '^app/' || true)" >> $GITHUB_ENV
          if [ -n "$CHANGED" ]; then
            echo "Changes found in app/: $CHANGED"
            echo "deploy" > deploy_flag.txt
          else
            echo "No changes found in app/"
          fi

      - name: Deploy Backend to Render
        if: (env.CHANGED != '') || (steps.changes.outputs.deploy_flag == 'deploy') && github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/releases/release'))
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          echo "Deploying backend to Render due to changes in app/"
          curl "$RENDER_DEPLOY_HOOK_URL"

